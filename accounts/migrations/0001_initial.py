# Generated by Django 4.1.1 on 2023-03-28 15:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_advocate', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='contactus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Advocate',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('license_number', models.CharField(blank=True, max_length=20, null=True)),
                ('office_address', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, default='None', max_length=10, null=True)),
                ('experience', models.CharField(blank=True, default='None', max_length=2, null=True)),
                ('specifications', models.CharField(choices=[('Civil', 'Civil'), ('Criminal', 'Criminal'), ('Consumer', 'Consumer'), ('Labour/Employment', 'Labour/Employment'), ('Intellectual Property Rights', 'Intellectual Property Rights'), ('Family', 'Family'), ('Corporate', 'Corporate'), ('Taxation', 'Taxation')], default='None', max_length=100)),
                ('languages', models.CharField(choices=[('English', 'English'), ('Hindi', 'Hindi'), ('Tamil', 'Tamil'), ('Kannada', 'Kannada'), ('Telugu', 'Telugu')], default='None', max_length=20)),
                ('description', models.TextField(default='None')),
                ('pimage', models.ImageField(default='default.jpg', upload_to='media')),
                ('dob', models.DateField(blank=True, null=True)),
                ('court', models.CharField(blank=True, default='None', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('description', models.CharField(max_length=200)),
                ('advocate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clientprofiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('district', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('postoffice', models.CharField(max_length=200)),
                ('picode', models.CharField(max_length=20)),
                ('pimage', models.ImageField(default='default.jpg', upload_to='media')),
                ('adult', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(default=None)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clientfeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('good', 'good'), ('average', 'average'), ('execellent', 'execellent'), ('bad', 'bad')], max_length=20)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clientcase',
            fields=[
                ('case_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('proof', models.FileField(blank='true', null='true', upload_to='media')),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('is_requested', models.BooleanField(default=False)),
                ('is_pending', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('is_notrequested', models.BooleanField(default=True)),
                ('defendant_name', models.CharField(max_length=200)),
                ('defendant_address', models.CharField(max_length=300)),
                ('case_type', models.CharField(choices=[('Civil', 'Civil'), ('Criminal', 'Criminal'), ('Consumer', 'Consumer'), ('Labour/Employment', 'Labour/Employment'), ('Intellectual Property Rights', 'Intellectual Property Rights'), ('Family', 'Family'), ('Corporate', 'Corporate'), ('Taxation', 'Taxation')], default='N/A', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(blank=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('advocate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='accounts.advocate')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to='accounts.client')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.TextField(default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('client_seen', models.BooleanField(default=False)),
                ('advocate_seen', models.BooleanField(default=False)),
                ('advocates', models.ManyToManyField(to='accounts.advocate')),
                ('clients', models.ManyToManyField(to='accounts.client')),
            ],
        ),
        migrations.CreateModel(
            name='CaseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientcase')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('advocate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.advocate')),
            ],
            options={
                'unique_together': {('case', 'advocate')},
            },
        ),
    ]
